environment:
    matrix:
        - RUST_INSTALL_TOOLCHAIN: gnu
          RUST_CHANNEL: stable
        - RUST_INSTALL_TRIPLE: msvc
          RUST_CHANNEL: nightly

matrix:
    allow_failures:
        - RUST_CHANNEL: nightly

platform:
    - x86
    - x64

install:
    - ps: Start-FileDownload "http://static.rust-lang.org/dist/channel-rust-${env:RUST_CHANNEL}"
    - ps: $env:RUST_INSTALLER = Select-String "${env:RUST_INSTALL_TRIPLE}.*exe" "channel-rust-${env:RUST_CHANNEL}" | select -exp line
    - ps: |
          if ($env:PLATFORM -eq "x86") {
            $env:RUST_INSTALLER = Select-String "i686-pc-windows-{env:RUST_INSTALL_TOOLCHAIN}.*exe" "channel-rust-${env:RUST_CHANNEL}" | select -exp line
          } else {
            $env:RUST_INSTALLER = Select-String "x86_64-pc-windows-{env:RUST_INSTALL_TOOLCHAIN}.*exe" "channel-rust-${env:RUST_CHANNEL}" | select -exp line
          }
    - ps: Start-FileDownload "http://static.rust-lang.org/dist/${env:RUST_INSTALLER}"
    - '%RUST_INSTALLER% /VERYSILENT /NORESTART /DIR="C:\Rust"'
    - call "C:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\vcvarsall.bat" amd64
    - ps: $env:path = "C:\Rust\bin;" + $env:path
    - ps: $env:path = "C:\mingw\bin;" + $env:path
    - gcc --version
    - rustc --version --verbose
    - cargo --version

build: false

test_script:
    - cargo build
    - cargo test
